{"version":3,"sources":["components/MessageForm.js","components/MyMessage.js","components/TheirMessage.js","components/ChatFeed.js","components/LoginForm.js","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"8NAqDeA,MAlDf,SAAqBC,GAAQ,IAAD,EAEEC,mBAAS,IAFX,mBAEjBC,EAFiB,KAEVC,EAFU,KAGhBC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAEVC,EAAe,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOP,EAAMQ,OACfD,EAAKE,OAAS,GAAGC,YAAYP,EAAOD,EAAQ,CAAEK,SAElDN,EAAS,KAYb,OACI,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACI,uBACIO,UAAU,gBACVE,YAAY,oBACZb,MAAOA,EACPc,SAhBS,SAACT,GAClBJ,EAASI,EAAEU,OAAOf,OAElBgB,YAASlB,EAAOI,IAcRU,SAAUR,IAEd,uBAAOa,QAAQ,gBAAf,SACI,sBAAMN,UAAU,eAAhB,SACI,cAACO,EAAA,EAAD,CAAiBP,UAAU,qBAGnC,uBACIQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAAEC,QAAS,QAClBT,SAxBS,SAACT,GAClBK,YAAYP,EAAOD,EAAQ,CAAEsB,MAAOnB,EAAEU,OAAOS,MAAOjB,KAAM,QAyBtD,wBAAQY,KAAK,SAASR,UAAU,cAAhC,SACI,cAACc,EAAA,EAAD,CAAcd,UAAU,oBCzBzBe,MApBf,YAAiC,IAAD,EAAXC,EAAW,EAAXA,QACjB,OAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBnB,QAAS,EAE3B,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAAEU,MAAO,WAKxB,qBAAKrB,UAAU,UAAUW,MAAO,CAC5BU,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAD1E,SAGKR,EAAQpB,QCsBN6B,MApCf,YAAiD,IAAD,IAAxBC,EAAwB,EAAxBA,YAAaV,EAAW,EAAXA,QAE3BW,GAAwBD,GAAeA,EAAYE,OAAOC,WAAab,EAAQY,OAAOC,SAE5F,OACI,sBAAK7B,UAAU,cAAf,UAEQ2B,GACI,qBACI3B,UAAU,iBACVW,MAAO,CAAEmB,gBAAgB,OAAD,cAASd,QAAT,IAASA,GAAT,UAASA,EAASY,cAAlB,aAAS,EAAiBG,OAA1B,SAKzB,OAAPf,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBnB,QAAS,EAEvB,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAAEqB,WAAYL,EAAuB,MAAQ,UAIxD,qBAAK3B,UAAU,UAAUW,MAAO,CAC5BU,MAAO,OAAQG,gBAAiB,UAAWQ,WAAYL,EAAuB,MAAQ,QAD1F,SAGKX,EAAQpB,WC0CtBqC,MArEf,SAAkB9C,GAAQ,IACd+C,EAA0C/C,EAA1C+C,MAAOC,EAAmChD,EAAnCgD,WAAYC,EAAuBjD,EAAvBiD,SAAUC,EAAalD,EAAbkD,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACvB,EAASwB,GACjC,OAAOF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,aACnBD,EAAOE,YAAc7B,EAAQN,IACzB,qBAEIV,UAAU,eACVW,MAAO,CACHU,MAAOmB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAASa,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBZ,OAAzB,OALvB,eACiBa,QAqC7B,OAAKN,EAGD,sBAAKtC,UAAU,YAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,gBACKsC,QADL,IACKA,OADL,EACKA,EAAMQ,QAEX,qBAAK9C,UAAU,gBAAf,SACKsC,EAAKG,OAAOC,KAAI,SAACC,GAAD,gBAAeA,EAAOA,OAAOd,kBAjCvC,WACnB,IAAMkB,EAAOC,OAAOD,KAAKV,GACzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GAClB,IAAM5B,EAAUqB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAapB,EAAQY,OAAOC,SAEhD,OACI,sBAA2BlB,MAAO,CAAEwC,MAAO,QAA3C,UACI,qBAAKnD,UAAU,gBAAf,SAEQwC,EACM,cAAC,EAAD,CAAWxB,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASU,YAAaV,EAAQkC,OAGnE,qBAAKlD,UAAU,gBAAgBW,MAAO,CAAEW,YAAakB,EAAc,OAAS,MAAOR,WAAYQ,EAAc,MAAQ,QAArH,SACKD,EAAmBvB,EAASwB,OATrC,eAAkBI,OA4BrBQ,GACD,qBAAKzC,MAAO,CAAE0C,OAAQ,WACtB,qBAAKrD,UAAU,yBAAf,SACI,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAQ4C,UAf1B,c,yCCUPmB,MA1Df,WAAsB,IAAD,EACelE,mBAAS,IADxB,mBACVyC,EADU,KACA0B,EADA,OAEenE,mBAAS,IAFxB,mBAEVoE,EAFU,KAEAC,EAFA,OAGSrE,mBAAS,IAHlB,mBAGVsE,EAHU,KAGHC,EAHG,KAIXlE,EAAY,uCAAG,WAAOC,GAAP,eAAAkE,EAAA,6DACjBlE,EAAEC,iBAEIkE,EAAa,CACf,aAAc,uCACd,YAAahC,EACb,cAAe2B,GANF,kBASPM,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IATjD,OAUbI,aAAaC,QAAQ,WAAYrC,GACjCoC,aAAaC,QAAQ,WAAYV,GAEjCW,OAAOC,SAASC,SAbH,kDAgBbV,EAAS,+BAhBI,0DAAH,sDAoBlB,OACI,qBAAK3D,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,8BACA,uBAAMC,SAAUR,EAAhB,UACI,uBACIe,KAAK,OACLnB,MAAOwC,EACP1B,SAAU,SAACT,GAAD,OAAO6D,EAAY7D,EAAEU,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZoE,UAAQ,IAEZ,uBACI9D,KAAK,WACLnB,MAAOmE,EACPrD,SAAU,SAACT,GAAD,OAAO+D,EAAY/D,EAAEU,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZoE,UAAQ,IAEZ,qBAAKC,MAAM,SAAX,SACI,wBAAQ/D,KAAK,SAASR,UAAU,SAAhC,SACI,sDAGR,oBAAIA,UAAU,QAAd,SAAuB0D,aC9B5Bc,MAjBf,WAEI,OAAKP,aAAaQ,QAAQ,YAKtB,cAAC,IAAD,CACIpB,OAAO,QACPqB,UAAU,uCACVtC,SAAU6B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,OAT7C,cAAC,EAAD,KCJfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b2ea4cb1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\r\nfunction MessageForm(props) {\r\n\r\n    const [value, setValue] = useState('')\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const text = value.trim();\r\n        if (text.length > 0) sendMessage(creds, chatId, { text })\r\n\r\n        setValue('');\r\n    }\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n    const handleUpload = (e) => {\r\n        sendMessage(creds, chatId, { files: e.target.files, text: '' })\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\" >\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","import React from 'react'\r\n\r\nfunction MyMessage({ message }) {\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{\r\n            float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'\r\n        }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","import React from 'react'\r\nimport { Avatar } from 'react-chat-engine'\r\n\r\nfunction TheirMessage({ lastMessage, message }) {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {\r\n                isFirstMessageByUser && (\r\n                    <div\r\n                        className=\"message-avatar\"\r\n                        style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                message?.attachments?.length > 0\r\n                    ? (\r\n                        <img\r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                    )\r\n                    : (\r\n                        <div className=\"message\" style={{\r\n                            float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'\r\n                        }}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import React from 'react'\r\nimport MessageForm from './MessageForm'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\nfunction ChatFeed(props) {\r\n    const { chats, activeChat, userName, messages } = props\r\n\r\n    const chat = chats && chats[activeChat]\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) =>\r\n            person.last_read === message.id && (\r\n                <div\r\n                    key={`read_${index}`}\r\n                    className=\"read-receipt\"\r\n                    style={{\r\n                        float: isMyMessage ? 'right' : 'left',\r\n                        backgroundImage: `url(${person?.person?.avatar})`\r\n                    }}\r\n                />\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`mesg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMessage message={message} />\r\n                                : <TheirMessage message={message} lastMessage={message[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (!chat) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat?.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ChatFeed\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nfunction LoginForm() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {\r\n            'Project-ID': \"97c7c307-bd28-4c78-80a4-6b98544ea175\",\r\n            'User-Name': username,\r\n            'User-Secret': password\r\n        }\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n\r\n        } catch (error) {\r\n            setError('oops, incorrect credentials')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit} >\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Username\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                    />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState } from 'react'\r\nimport './App.css'\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed'\r\nimport LoginForm from './components/LoginForm';\r\nfunction App() {\r\n\r\n    if (!localStorage.getItem('username')) {\r\n        return <LoginForm />\r\n    }\r\n\r\n    return (\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"97c7c307-bd28-4c78-80a4-6b98544ea175\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}